version: '2.4'
services:
  tailscale:                                                          # Provides tailscale functionality for the stack
    build:                                                           # By default it uses the 192.168.100.0/24 network
      context: ${TAILSCALE_CONTEXT}                                  # Start tailscale once the container is up:
      dockerfile: Dockerfile                                         # docker-compose exec tailscale tailscale up --advertise-routes=192.168.100/24 --accept-routes
                                                                      # This will provide you with the Authorization URL to sign into tailscale.
    image: ${TAILSCALE_IMAGE:-ghcr.io/beardedtek-com/tailscale:main}
    container_name: ${TAILSCALE_CONTAINER_NAME:-tailscale}
    restart: unless-stopped
    volumes:
      - ${TAILSCALE_DATA:-./vol/tailscale/data}:/data
      - ${TAILSCALE_VAR_LIB:-./vol/tailscale/var_lib}:/var/lib        # Required for tailscale

      - /dev/net/tun:/dev/net/tun                                     # Required for tailscale
    cap_add:
      - net_admin                                                     # Required for tailscale
      - sys_module                                                    # Required for tailscale
    environment:
      DOCKER_SUBNET: ${NETWORK_SUBNET:-192.168.200.0/24}
    networks:
      beardnet:
        ipv4_address: ${TAILSCALE_IP:-192.168.200.3}
    privileged: true
    command: ${TAILSCALE_COMMAND:-/opt/tailscale/tailscale}
  fevr:
    build:
      context: ${FEVR_CONTEXT}
      dockerfile: Dockerfile
    image: ${FEVR_IMAGE:-ghcr.io/beardedtek-com/fevr:main}
    container_name: ${FEVR_CONTAINER_NAME:-fevr-devel}
    restart: unless-stopped
    environment:
      FRIGATE_URL: "${FRIGATE_URL:-http://frigate.local:5000}"
      FEVR_DEBUG: "${FRIGATE_DEBUG:-true}"
      FEVR_IP: 192.168.200.2
      FEVR_PORT: ${FEVR_PORT:-5080}
      FEVR_CONTAINER_NAME: ${FEVR_CONTAINER_NAME:-fevr}
      MQTT_BROKER_URL: ${MQTT_BROKER_URL:-192.168.2.245}
      MQTT_BROKER_PORT: ${MQTT_BROKER_PORT:-1883}
      MQTT_USER: ${MQTT_USER:-}
      MQTT PASS: ${MQTT_PASS:-}
      MQTT_TOPICS: ${MQTT_TOPICS:-'frigate/+'}
    privileged: true
    networks:
      beardnet:
        ipv4_address: ${FEVR_IP:-192.168.200.2}
    volumes:
     #- ./vol/fevr/data/:/var/www/data                              # OPTIONAL: expose /var/www/data folder which contains the SQLite database and config.json files
     #- ./vol/fevr/events:/var/www/html/events                      # OPTIONAL: save events to a local folder
     - nfsevents:/var/www/html/events                               # OPTIONAL: save events to an NFS share
     - nfsdata:/var/www/data
networks:
  beardnet:                                                         # Network definition for our tailscale network
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-192.168.200.0/24}
          gateway: ${NETWORK_GATEWAY:-192.168.200.1}

volumes:
  nfsevents:                                                        # VOLUME DEFINITION FOR NFS share
    driver_opts:
      type: "nfs"
      o: "addr=${NAS_IP},nfsvers=4"                                 # Make sure to change to your NFS server's address
      # o: "addr=<your_nas_ip>,rw,nfsvers=4"                        # SOME NFS SHARES REQUIRE THIS!!!
      device: ":${NAS_EVENTS}"
  nfsdata:                                                          # VOLUME DEFINITION FOR NFS share
    driver_opts:
      type: "nfs"
      o: "addr=${NAS_IP},nfsvers=4"                                 # Make sure to change to your NFS server's address
      # o: "addr=<your_nas_ip>,rw,nfsvers=4"                        # SOME NFS SHARES REQUIRE THIS!!!
      device: ":${NAS_DATA}"
